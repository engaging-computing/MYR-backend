swagger: '2.0'
info:
  description: |
    The API for LearnMYR.org.
  version: 1.0.0
  title: MYR API - V1
  termsOfService: http://learnmyr.org/about/tos
  contact:
    email: support@learnmyr.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: learnmyr.org
basePath: /apiv1
schemes:
- https
consumes:
- application/json
produces:
- application/json
tags:
- name: Lessons
  description: Lessons API
- name: Courses
  description: Courses API
- name: Users
  description: Users API
- name: Reference Examples
  description: Reference Examples API
- name: Snapshots
  description: Snapshots API
paths:
  /lessons:
    get:
      tags:
      - Lessons
      summary: Get all lessons
      operationId: getLessons
      produces:
      - application/json
      responses:
        200:
          description: Array of all lessons
          schema: 
              type: array
              items: 
                $ref: '#/definitions/Lesson'
    post:
      tags:
      - lesson
      summary: Create a new lesson
      operationId: createLesson
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Lesson that needs to be created
        required: true
        schema:
          $ref: '#/definitions/Lesson'
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        201:
          description: Lesson created
          schema: 
              $ref: '#/definitions/Lesson'
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /lessons/id/{id}:
    get:
        tags:
        - Lessons
        summary: Get a lesson by ID
        operationId: getLesson
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the requested lesson
            required: true
            type: string
        responses:
          200:
            description: Lesson object
            schema: 
                $ref: '#/definitions/Lesson'
    put:
      tags:
      - lesson
      summary: Update a lesson
      operationId: updateLesson
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Lesson properties to update
        required: true
        schema:
          $ref: '#/definitions/Lesson'
      - name: id
        in: path
        description: ID of the requested lesson to update
        required: true
        type: string
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        200:
          description: Lesson updated
          schema: 
              $ref: '#/definitions/Lesson'
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
        tags:
        - Lessons
        summary: Delete a lesson by ID
        operationId: deleteLesson
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the lesson to delete
            required: true
            type: string
        responses:
          200:
            description: Lesson deleted
# securityDefinitions:
#   petstore_auth:
#     type: oauth2
#     authorizationUrl: http://petstore.swagger.io/oauth/dialog
#     flow: implicit
#     scopes:
#       write:pets: modify pets in your account
#       read:pets: read your pets
#   api_key:
#     type: apiKey
#     name: api_key
#     in: header
definitions:
  Lesson:
    type: object
    properties:
      _id:
        type: string
        example: "5c5b173d7682e1058205e316"
      name:
        type: string
        example: "Intro to Geometries"
      prompt:
        type: string
        example: "This lesson will introduce you to using geometries."
      code:
        type: string
        example: "box();"
  # Category:
  #   type: object
  #   properties:
  #     id:
  #       type: integer
  #       format: int64
  #     name:
  #       type: string
  #   xml:
  #     name: Category
  # User:
  #   type: object
  #   properties:
  #     id:
  #       type: integer
  #       format: int64
  #     username:
  #       type: string
  #     firstName:
  #       type: string
  #     lastName:
  #       type: string
  #     email:
  #       type: string
  #     password:
  #       type: string
  #     phone:
  #       type: string
  #     userStatus:
  #       type: integer
  #       format: int32
  #       description: User Status
  #   xml:
  #     name: User
  # Tag:
  #   type: object
  #   properties:
  #     id:
  #       type: integer
  #       format: int64
  #     name:
  #       type: string
  #   xml:
  #     name: Tag
  # Lesson:
  #   type: object
  #   required:
  #   - name
  #   - photoUrls
  #   properties:
  #     id:
  #       type: integer
  #       format: int64
  #     category:
  #       $ref: '#/definitions/Category'
  #     name:
  #       type: string
  #       example: doggie
  #     photoUrls:
  #       type: array
  #       xml:
  #         name: photoUrl
  #         wrapped: true
  #       items:
  #         type: string
  #     tags:
  #       type: array
  #       xml:
  #         name: tag
  #         wrapped: true
  #       items:
  #         $ref: '#/definitions/Tag'
  #     status:
  #       type: string
  #       description: pet status in the store
  #       enum:
  #       - available
  #       - pending
  #       - sold
  #   xml:
  #     name: Pet
  # ApiResponse:
  #   type: object
  #   properties:
  #     code:
  #       type: integer
  #       format: int32
  #     type:
  #       type: string
  #     message:
  #       type: string