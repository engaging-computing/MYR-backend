swagger: '2.0'
info:
  description: |
    The API for LearnMYR.org.
  version: 1.0.0
  title: MYR API - V1
  termsOfService: http://learnmyr.org/about/tos
  contact:
    email: support@learnmyr.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: learnmyr.org
basePath: /apiv1
schemes:
- https
consumes:
- application/json
produces:
- application/json
tags:
- name: Lessons
  description: Lessons API
- name: Courses
  description: Courses API
- name: Users
  description: Users API
- name: Reference Examples
  description: Reference Examples API
- name: Snapshots
  description: Snapshots API
- name: Users
  description: Authentication API
paths:
  /lessons:
    get:
      tags:
      - Lessons
      summary: Get all lessons
      operationId: getLessons
      produces:
      - application/json
      responses:
        200:
          description: Array of all lessons
          schema: 
              type: array
              items: 
                $ref: '#/definitions/Lesson'
    post:
      tags:
      - Lessons
      summary: Create a new lesson
      operationId: createLesson
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Lesson that needs to be created
        required: true
        schema:
          $ref: '#/definitions/NewLesson'
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        201:
          description: Lesson created
          schema: 
              $ref: '#/definitions/Lesson'
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /lessons/id/{id}:
    get:
        tags:
        - Lessons
        summary: Get a lesson by ID
        operationId: getLesson
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the requested lesson
            required: true
            type: string
        responses:
          200:
            description: Lesson object
            schema: 
                $ref: '#/definitions/Lesson'
    put:
      tags:
      - Lessons
      summary: Update a lesson
      operationId: updateLesson
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Lesson properties to update
        required: true
        schema:
          $ref: '#/definitions/NewLesson'
      - name: id
        in: path
        description: ID of the requested lesson to update
        required: true
        type: string
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        200:
          description: Lesson updated
          schema: 
              $ref: '#/definitions/Lesson'
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    delete:
        tags:
        - Lessons
        summary: Delete a lesson by ID
        operationId: deleteLesson
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the lesson to delete
            required: true
            type: string
          - in: header
            name: x-access-token
            type: string
            required: true
        responses:
          200:
            description: Lesson deleted
  /courses:
    get:
      tags:
      - Courses
      summary: Get all courses
      operationId: getCourses
      produces:
      - application/json
      responses:
        200:
          description: Array of all courses
          schema: 
              type: array
              items: 
                $ref: '#/definitions/Course'
    post:
      tags:
      - Courses
      summary: Create a new course
      operationId: createCourse
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Course that needs to be created
        required: true
        schema:
          $ref: '#/definitions/NewCourse'
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        201:
          description: Course created
          schema: 
              $ref: '#/definitions/Course'
        401:
          description: Unauthorized
          schema: 
              $ref: '#/definitions/Unauthorized'
        409:
          description: Duplicate course shortname
          schema:
            $ref: '#/definitions/Conflict'
        500:
          description: Internal Server Error
  /courses/{name}:
    get:
        tags:
        - Courses
        summary: Get a course by its shortname
        operationId: getCourseByShortname
        produces:
        - application/json
        parameters:
          - name: name
            in: path
            description: Shortname of the requested course
            required: true
            type: string
        responses:
          200:
            description: Requested course is returned
            schema: 
                $ref: '#/definitions/Course'
  /courses/id/{id}:
    get:
        tags:
        - Courses
        summary: Get a course by ID
        operationId: getCourseByID
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the requested course
            required: true
            type: string
        responses:
          200:
            description: Requested course is returned
            schema: 
                $ref: '#/definitions/Course'
    put:
      tags:
      - Courses
      summary: Update a lesson
      operationId: updateCourse
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Course properties to update
        required: true
        schema:
          $ref: '#/definitions/NewCourse'
      - name: id
        in: path
        description: ID of the requested course to update
        required: true
        type: string
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        200:
          description: Course updated
          schema: 
              $ref: '#/definitions/Course'
        401:
          description: Unauthorized
          schema: 
              $ref: '#/definitions/Unauthorized'
        500:
          description: Internal Server Error
    delete:
        tags:
        - Courses
        summary: Delete a course by ID
        operationId: deleteCourse
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the course to delete
            required: true
            type: string
          - in: header
            name: x-access-token
            type: string
            required: true
        responses:
          200:
            description: Course deleted
          401:
            description: Unauthorized
            schema: 
              $ref: '#/definitions/Unauthorized'
          500:
            description: Internal Server Error
  /referenceexamples:
    get:
      tags:
      - Reference Examples
      summary: Get all reference examples
      operationId: getRefEx
      produces:
      - application/json
      responses:
        200:
          description: Array of all reference examples
          schema: 
              type: array
              items: 
                $ref: '#/definitions/ReferenceExample'
    post:
      tags:
      - Reference Examples
      summary: Create a new reference example
      operationId: createRefEx
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Reference example that needs to be created
        required: true
        schema:
          $ref: '#/definitions/NewReferenceExample'
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        201:
          description: Reference example
          schema: 
              $ref: '#/definitions/ReferenceExample'
        401:
          description: Unauthorized
          schema: 
              $ref: '#/definitions/Unauthorized'
        409:
          description: Duplicate function name
          schema:
            $ref: '#/definitions/Conflict'
        500:
          description: Internal Server Error
  /referenceexamples/{functionName}:
    get:
        tags:
        - Reference Examples
        summary: Get a reference example by function name
        operationId: getRefExByFuncName
        produces:
        - application/json
        parameters:
          - name: functionName
            in: path
            description: Function name of the requested reference example
            required: true
            type: string
        responses:
          200:
            description: Requested reference example is returned
            schema: 
                $ref: '#/definitions/ReferenceExample'
  /referenceexamples/id/{id}:
    get:
        tags:
        - Reference Examples
        summary: Get a reference example by ID
        operationId: getRefExByID
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the requested reference example
            required: true
            type: string
        responses:
          200:
            description: Requested reference example is returned
            schema: 
                $ref: '#/definitions/ReferenceExample'
    put:
      tags:
      - Reference Examples
      summary: Update a reference example
      operationId: updateRefEx
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Reference example properties to update
        required: true
        schema:
          $ref: '#/definitions/NewReferenceExample'
      - name: id
        in: path
        description: ID of the requested reference example to update
        required: true
        type: string
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        200:
          description: Reference example updated
          schema: 
              $ref: '#/definitions/ReferenceExample'
        401:
          description: Unauthorized
          schema: 
              $ref: '#/definitions/Unauthorized'
        500:
          description: Internal Server Error
    delete:
        tags:
        - Reference Examples
        summary: Delete a reference example by ID
        operationId: deleteRefEx
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the reference example to delete
            required: true
            type: string
          - in: header
            name: x-access-token
            type: string
            required: true
        responses:
          200:
            description: Reference example deleted
          401:
            description: Unauthorized
            schema: 
              $ref: '#/definitions/Unauthorized'
          500:
            description: Internal Server Error
  
  /snapshots:
    get:
      tags:
      - Snapshots
      summary: Get all snapshots
      operationId: getSnapshots
      produces:
      - application/json
      parameters:
          - in: header
            name: x-access-token
            type: string
            required: true
      responses:
        200:
          description: Array of all snapshots
          schema: 
              type: array
              items: 
                $ref: '#/definitions/Snapshot'
        401:
            description: Unauthorized
            schema: 
              $ref: '#/definitions/Unauthorized'
    post:
      tags:
        - Snapshots
      summary: Create a new snapshot
      operationId: createSnapshot
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Snapshot that needs to be created
        required: true
        schema:
          $ref: '#/definitions/NewSnapshot'
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        201:
          description: Snapshot created
          schema: 
              $ref: '#/definitions/Snapshot'
        401:
          description: Unauthorized
          schema: 
              $ref: '#/definitions/Unauthorized'
        500:
          description: Internal Server Error
  /snapshots/{user}/{timestamp}:
    get:
        tags:
          - Snapshots
        summary: Get a snapshot by user ID and timestamp
        operationId: getSnapshotByUserTime
        produces:
        - application/json
        parameters:
          - name: user
            in: path
            description: User ID of requested snapshot
            required: true
            type: string
          - name: timestamp
            in: path
            description: Timestamp of requested snapshot
            required: true
            type: string
          - in: header
            name: x-access-token
            type: string
            required: true
        responses:
          200:
            description: Requested snapshot is returned
            schema: 
                $ref: '#/definitions/Snapshot'
          401:
            description: Unauthorized
            schema: 
                $ref: '#/definitions/Unauthorized'
  /snapshots/id/{id}:
    get:
        tags:
          - Snapshots
        summary: Get a snapshot by ID
        operationId: getSnapshotByID
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the requested course
            required: true
            type: string
        responses:
          200:
            description: Requested course is returned
            schema: 
                $ref: '#/definitions/Snapshot'
  /users:
    get:
      tags:
      - Users
      summary: Get all Users
      operationId: getUsers
      produces:
      - application/json
      responses:
        200:
          description: Array of all Users
          schema: 
              type: array
              items: 
                $ref: '#/definitions/User'
    post:
      tags:
      - Users
      summary: Create a new user
      operationId: createUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: User that needs to be created
        required: true
        schema:
          $ref: '#/definitions/NewUser'
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        201:
          description: User created
          schema: 
              $ref: '#/definitions/User'
        401:
          description: Unauthorized
          schema: 
              $ref: '#/definitions/Unauthorized'
        409:
          description: Duplicate email
          schema:
            $ref: '#/definitions/Conflict'
        500:
          description: Internal Server Error
  /users/login:
    post:
        tags:
        - Users
        summary: Login
        operationId: userLogin
        produces:
        - application/json
        responses:
          200:
            description: User authentication is returned
            schema: 
                $ref: '#/definitions/Auth'
          401:
            description: Unauthorized
            schema: 
              $ref: '#/definitions/Unauthorized'
  /users/logout:
    get:
        tags:
        - Users
        summary: Logout
        operationId: userLogout
        produces:
        - application/json
        responses:
          200:
            description: User is logged out
            schema: 
                $ref: '#/definitions/RevokeAuth'
  /users/profile:
    get:
        tags:
        - Users
        summary: Get the profile of the logged in user
        operationId: getUserProfile
        produces:
        - application/json
        responses:
          200:
            description: User profile is returned
            schema: 
                $ref: '#/definitions/ReferenceExample'
          401:
            description: Unauthorized
            schema: 
              $ref: '#/definitions/Unauthorized'
  /users/id/{id}:
    get:
        tags:
        - Users
        summary: Get a user by ID
        operationId: getUserByID
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the requested user
            required: true
            type: string
        responses:
          200:
            description: Requested user is returned
            schema: 
                $ref: '#/definitions/User'
    put:
      tags:
      - Users
      summary: Update a user
      operationId: updateUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: User properties to update
        required: true
        schema:
          $ref: '#/definitions/NewUser'
      - name: id
        in: path
        description: ID of the requested user to update
        required: true
        type: string
      - in: header
        name: x-access-token
        type: string
        required: true
      responses:
        200:
          description: User updated
          schema: 
              $ref: '#/definitions/User'
        401:
          description: Unauthorized
          schema: 
              $ref: '#/definitions/Unauthorized'
        500:
          description: Internal Server Error
    delete:
        tags:
        - Users
        summary: Delete a user by ID
        operationId: deleteUser
        produces:
        - application/json
        parameters:
          - name: id
            in: path
            description: ID of the user to delete
            required: true
            type: string
          - in: header
            name: x-access-token
            type: string
            required: true
        responses:
          200:
            description: User deleted
          401:
            description: Unauthorized
            schema: 
              $ref: '#/definitions/Unauthorized'
          500:
            description: Internal Server Error
definitions:
  Unauthorized:
    type: "string"
    example: "Error 401: Not authorized"
  Conflict:
    type: "object"
    properties:
      message:
        type: string
        example: "A course with this function name already exists"
  Lesson:
    allOf:
      - $ref: '#/definitions/NewLesson'
      - required:
        - _id
        - __v
        type: object
        properties:
          _id:
            type: string
            example: "5c5b173d7682e1058205e316"
          __v:
            type: integer
            example: 1
  NewLesson:
    type: "object"
    required:
      - name  
      - prompt
      - code
    properties:
      name:
        type: string
        example: "Intro to Geometries"
      prompt:
        type: string
        example: "This lesson will introduce you to using geometries."
      code:
        type: string
        example: "box();"   
  Course:
    allOf:
      - $ref: '#/definitions/NewCourse'
      - required:
        - id
        - __v
        type: object
        properties:
          _id:
            type: string
            example: "5c5b180c7682e1058205e31d"
          __v:
            type: integer
            example: 1
  NewCourse:
    type: "object"
    required:
      - name  
      - shortname
      - difficulty
      - description
    properties:
      name:
        type: string
        example: "Intro to Geometries"
      shortname:
        type: string
        example: "geometries"
      description:
        type: string
        example: "This course will introduce you to using geometries." 
      difficulty:
        type: integer
        example: 2
      lessons:
        type: array
        example: ["5c5b173d7682e1058205e316","5c5b17557682e1058205e317"]
  Snapshot:
    allOf:
      - $ref: '#/definitions/NewSnapshot'
      - required:
        - id
        - __v
        type: object
        properties:
          _id:
            type: string
            example: "5c5b180c7682e1058205e31d"
          __v:
            type: integer
            example: 1
  NewSnapshot:
    type: "object"
    required:
      - user
      - timestamp
      - text
      - error
    properties:
      user:
        type: string
        example: "c83nf38nf3n09fn303f"
      timestamp:
        type: string
        format: date-time
        example: "2018-10-19T04:35:51.196Z"
      text:
        type: string
        example: "box();"
      error:
        type: boolean
        example: true
  ReferenceExample:
    allOf:
      - $ref: '#/definitions/NewReferenceExample'
      - required:
        - id
        - __v
        type: object
        properties:
          _id:
            type: string
            example: "5c5b180c7682e1058205e31d"
          __v:
            type: integer
            example: 1
  NewReferenceExample:
    type: "object"
    required:
      - functionName
      - type
      - info
      - code
    properties:
      functionName:
        type: string
        example: "text"
      type:
        type: string
        example: "geometry"
      info:
        type: string
        example: "The text function prints the given text using the current cursor attributes. If given no text, it will print \"Default\". This function returns an elementID."
      code:
        type: string
        example: "text(\"example\");"
      functionParams:
        type: array
        example: ["string"]
      suggestedCourse:
        type: string
        example: "geometry"
  User:
    allOf:
      - $ref: '#/definitions/NewUser'
      - required:
        - id
        - __v
        - user_created
        - last_login
        type: object
        properties:
          _id:
            type: string
            example: "5c5b180c7682e1058205e31d"
          __v:
            type: integer
            example: 1
          user_created:
            type: string
            format: date-time
            example: "2019-08-04T18:23:14.414Z"
          last_login:
            type: string
            format: date-time
            example: "2019-08-04T18:23:14.414Z"
          password:
            type: string
            example: "$2a$10$rcPlmyt0Cy5QWiuXIlZgGeIl5obfjAJPJfFhpj8svZmIqw3dd8UaG"
  NewUser:
    type: "object"
    required:
      - email
      - password
    properties:
      name:
        type: string
        example: "User"
      email:
        type: string
        format: email
        example: "example@learnmyr.org"
      password:
        type: string
        example: "example_password"
      admin:
        type: boolean
        example: false
      subscribed:
        type: boolean
        example: true
  Auth:
    type: "object"
    required:
      - auth
      - token
    properties:
      auth:
        type: boolean
        example: true
      isAdmin:
        type: boolean
        example: false
      token:
        type: string
        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
  RevokeAuth:
    allOf:
      - $ref: '#/definitions/Auth'
    properties:
      auth:
        type: boolean
        example: false
      token:
        type: string
        example: null
